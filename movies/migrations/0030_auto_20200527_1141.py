# Generated by Django 2.2.3 on 2020-05-27 03:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('movies', '0029_movie_writer'),
    ]

    operations = [
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('plot', models.TextField(blank=True, null=True)),
                ('runningtime', models.IntegerField(default=90)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('trailer', models.URLField(blank=True, null=True)),
                ('views', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('watched', models.IntegerField(default=0)),
                ('watchlisted', models.IntegerField(default=0)),
                ('score', models.DecimalField(decimal_places=1, default=0.0, max_digits=4)),
                ('imdb_rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=4)),
                ('metascore', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='movies/images/')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='movies/posters/')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cast', models.ManyToManyField(related_name='episodecast', to='movies.Artist')),
                ('country', models.ManyToManyField(to='movies.Country')),
                ('director', models.ManyToManyField(related_name='episodedirector', to='movies.Artist')),
                ('genre', models.ManyToManyField(to='movies.Genre')),
                ('language', models.ManyToManyField(to='movies.Language')),
                ('mpa_rating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.MPA_Rating')),
                ('producer', models.ManyToManyField(related_name='episodeproducer', to='movies.Artist')),
                ('production', models.ManyToManyField(to='movies.Production')),
                ('supportingcast', models.ManyToManyField(related_name='episodesupportingcast', to='movies.Artist')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('writer', models.ManyToManyField(related_name='episodewriter', to='movies.Artist')),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('plot', models.TextField(blank=True, null=True)),
                ('runningtime', models.IntegerField(default=90)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('trailer', models.URLField(blank=True, null=True)),
                ('views', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('watched', models.IntegerField(default=0)),
                ('watchlisted', models.IntegerField(default=0)),
                ('score', models.DecimalField(decimal_places=1, default=0.0, max_digits=4)),
                ('imdb_rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=4)),
                ('metascore', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='movies/images/')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='movies/posters/')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cast', models.ManyToManyField(related_name='seasoncast', to='movies.Artist')),
                ('country', models.ManyToManyField(to='movies.Country')),
                ('director', models.ManyToManyField(related_name='seasondirector', to='movies.Artist')),
                ('episodes', models.ManyToManyField(to='movies.Episode')),
                ('genre', models.ManyToManyField(to='movies.Genre')),
                ('language', models.ManyToManyField(to='movies.Language')),
                ('mpa_rating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.MPA_Rating')),
                ('producer', models.ManyToManyField(related_name='seasonproducer', to='movies.Artist')),
                ('production', models.ManyToManyField(to='movies.Production')),
                ('supportingcast', models.ManyToManyField(related_name='seasonsupportingcast', to='movies.Artist')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('writer', models.ManyToManyField(related_name='seasonwriter', to='movies.Artist')),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='producer',
            field=models.ManyToManyField(related_name='movieproducer', to='movies.Artist'),
        ),
        migrations.AddField(
            model_name='movie',
            name='supportingcast',
            field=models.ManyToManyField(related_name='moviesupportingcast', to='movies.Artist'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='cast',
            field=models.ManyToManyField(related_name='moviecast', to='movies.Artist'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='director',
            field=models.ManyToManyField(related_name='moviedirector', to='movies.Artist'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='writer',
            field=models.ManyToManyField(related_name='moviewriter', to='movies.Artist'),
        ),
        migrations.AlterField(
            model_name='moviecomment',
            name='commentdislike',
            field=models.ManyToManyField(related_name='moviecommentdislike', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='moviecomment',
            name='commentlike',
            field=models.ManyToManyField(related_name='moviecommentlike', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='profile',
            name='watchedlist',
            field=models.ManyToManyField(related_name='moviewatchedlist', to='movies.Movie'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='watchlist',
            field=models.ManyToManyField(related_name='moviewatchlist', to='movies.Movie'),
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('plot', models.TextField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('trailer', models.URLField(blank=True, null=True)),
                ('views', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('watched', models.IntegerField(default=0)),
                ('watchlisted', models.IntegerField(default=0)),
                ('score', models.DecimalField(decimal_places=1, default=0.0, max_digits=4)),
                ('imdb_rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=4)),
                ('metascore', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='movies/images/')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='movies/posters/')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cast', models.ManyToManyField(related_name='seriescast', to='movies.Artist')),
                ('country', models.ManyToManyField(to='movies.Country')),
                ('director', models.ManyToManyField(related_name='seriesdirector', to='movies.Artist')),
                ('genre', models.ManyToManyField(to='movies.Genre')),
                ('language', models.ManyToManyField(to='movies.Language')),
                ('mpa_rating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.MPA_Rating')),
                ('producer', models.ManyToManyField(related_name='seriesproducer', to='movies.Artist')),
                ('production', models.ManyToManyField(to='movies.Production')),
                ('seasons', models.ManyToManyField(to='movies.Season')),
                ('supportingcast', models.ManyToManyField(related_name='seriessupportingcast', to='movies.Artist')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('writer', models.ManyToManyField(related_name='serieswriter', to='movies.Artist')),
            ],
        ),
    ]
